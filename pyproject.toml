
[project]
name = "swift-vo"
license = { file = "LICENSE" }
readme = "README.md"
authors = [{ name = "Jamie Kennea", email = "jak51@psu.edu" }]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "Operating System :: OS Independent",
    "Programming Language :: Python",
]
dynamic = ["version"]
requires-python = ">=3.11"
dependencies = [
    "astropy",
    "swifttools",
    "fastapi[standard]",
    "gunicorn>=23.0.0",
    "uvicorn>=0.34.0",
    "asyncer>=0.0.8",
    "pytest-asyncio>=0.26.0",
]

[project.urls]
"Source Code" = "https://github.com/Swift-SOT/swift-vo"

# On a mac, install optional dependencies with `pip install '.[dev]'` (include the single quotes)
[project.optional-dependencies]
dev = [
    "jupyter",    # Clears output from Jupyter notebooks
    "mypy",       # Used for static type checking of files
    "pre-commit", # Used to run checks before finalizing a git commit
    "pytest",
    "pytest-cov", # Used to report total code coverage
    "ruff",       # Used for static linting of files
    "ipykernel",
]

[build-system]
requires = [
    "setuptools>=62",      # Used to build and package the Python project
    "setuptools_scm>=6.2", # Gets release version from git. Makes it available programmatically
]
build-backend = "setuptools.build_meta"

[tool.setuptools_scm]
write_to = "swift_vo/_version.py"

[tool.pytest.ini_options]
testpaths = ["tests"]

[tool.black]
line-length = 110
target-version = ["py312"]

[tool.isort]
profile = "black"
line_length = 110

[tool.ruff]
line-length = 110
target-version = "py312"

[tool.ruff.lint]
select = [
    # pycodestyle
    "E",
    "W",
    # Pyflakes
    "F",
    # pep8-naming
    #"N",
    # pyupgrade
    "UP",
    # flake8-simplify
    "SIM",
    # isort
    "I",
    # docstrings
    "D101",
    "D102",
    "D103",
    "D106",
    "D206",
    "D207",
    "D208",
    "D300",
    "D417",
    "D419",
    # Numpy v2.0 compatibility
    "NPY201",
]

ignore = [
    "UP006",  # Allow non standard library generics in type hints
    "UP007",  # Allow Union in type hints
    "SIM114", # Allow if with same arms
    "B028",   # Allow default warning level
    "SIM117", # Allow nested with
    "UP015",  # Allow redundant open parameters
    "UP028",  # Allow yield in for loop
]
[tool.setuptools.package-data]
swift_vo = ["py.typed"]

[tool.coverage.run]
omit = ["swift_vo/_version.py"]
